{"version":3,"sources":["apis/index.js","routeComponents/auth/SignupForm.js","routeComponents/auth/Login.js","routeComponents/auth/Profile.js","routeComponents/auth/PrivateRoute.js","components/LoadingButton.js","components/ErrorAlert.js","routeComponents/projects/ProjectForm.js","routeComponents/projects/ProjectCreate.js","components/LoadingSpinner.js","routeComponents/projects/ProjectList.js","routeComponents/projects/ProjectDetail.js","routeComponents/projects/ProjectEdit.js","components/Navbar.js","routeComponents/auth/Logout.js","components/App.js","index.js"],"names":["api","axios","create","baseURL","process","storedUser","localStorage","getItem","loggedInUser","JSON","parse","interceptors","request","use","config","headers","Authorization","token","SignupForm","history","useHistory","useState","email","name","password","state","setState","handleChange","event","temp","currentTarget","value","a","preventDefault","post","response","console","log","push","error","onSubmit","className","htmlFor","type","id","aria-describedby","onChange","Login","props","data","user","setLoggedInUser","setItem","stringify","to","Profile","useEffect","get","fetchData","_id","PrivateRoute","Component","component","rest","render","LoadingButton","disabled","role","aria-hidden","ErrorAlert","ProjectForm","handleSubmit","title","description","loading","ProjectCreate","message","LoadingSpinner","ProjectList","projects","scope","map","project","key","ProjectDetail","useParams","createdAt","updatedAt","Date","toLocaleDateString","ProjectEdit","match","params","count","isLoadingFetch","setIsLoadingFetch","isLoadingSend","setIsLoadingSend","patch","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Logout","removeItem","setUser","App","userInfo","setUserInfo","parsedUser","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"sSAGMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAASC,2DAGLC,EAAaC,aAAaC,QAAQ,gBAElCC,EAAeC,KAAKC,MAAML,GAAc,MAE9CL,EAAIW,aAAaC,QAAQC,KAAI,SAACC,GAK5B,OAJAA,EAAOC,QAAU,CACfC,cAAc,UAAD,OAAYR,EAAaS,QAGjCH,KAGMd,QCqEAkB,MAnFf,WACE,IAAMC,EAAUC,cADI,EAGMC,mBAAS,CAAEC,MAAO,GAAIC,KAAM,GAAIC,SAAU,KAHhD,mBAGbC,EAHa,KAGNC,EAHM,KAMpB,SAASC,EAAaC,GACpB,IAAMC,EAAI,eAAQJ,GAClBI,EAAKD,EAAME,cAAcP,MAAQK,EAAME,cAAcC,MACrDL,EAASG,GATS,4CAapB,WAA4BD,GAA5B,eAAAI,EAAA,6DAEEJ,EAAMK,iBAFR,kBAK2BjC,EAAIkC,KAAK,UAAWT,GAL/C,OAKUU,EALV,OAOIC,QAAQC,IAAIF,GACZhB,EAAQmB,KAAK,UARjB,gDAUIF,QAAQG,MAAR,MAVJ,0DAboB,sBA6BpB,OACE,6BACE,0BAAMC,SA/BU,6CAiCd,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,uBAAf,QACA,2BACEC,KAAK,OACLF,UAAU,eACVlB,KAAK,OACLqB,GAAG,sBACHC,mBAAiB,YACjBC,SAAUnB,EACVI,MAAON,EAAMF,QAKjB,yBAAKkB,UAAU,cACb,2BAAOC,QAAQ,wBAAf,iBACA,2BACEC,KAAK,QACLpB,KAAK,QACLkB,UAAU,eACVG,GAAG,uBACHC,mBAAiB,YACjBC,SAAUnB,EACVI,MAAON,EAAMH,QAEf,2BAAOsB,GAAG,YAAYH,UAAU,wBAAhC,mDAKF,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,2BAAf,YACA,2BACEC,KAAK,WACLpB,KAAK,WACLkB,UAAU,eACVG,GAAG,0BACHE,SAAUnB,EACVI,MAAON,EAAMD,YAIjB,4BAAQmB,KAAK,SAASF,UAAU,mBAAhC,a,QCJOM,MAxEf,SAAeC,GAAO,MAEM3B,mBAAS,CAAEC,MAAO,GAAIE,SAAU,KAFtC,mBAEbC,EAFa,KAENC,EAFM,KAKpB,SAASC,EAAaC,GACpBF,EAAS,2BACJD,GADG,kBAELG,EAAME,cAAcP,KAAOK,EAAME,cAAcC,SARhC,4CAapB,WAA4BH,GAA5B,eAAAI,EAAA,sEAEIJ,EAAMK,iBAFV,SAI2BjC,EAAIkC,KAAK,SAAUT,GAJ9C,OAIUU,EAJV,OAMIC,QAAQC,IAAIF,GACZT,EAAS,eAAIS,EAASc,KAAKC,OAC3BF,EAAMG,gBAAN,eAA2BhB,EAASc,KAAKC,OAGzC5C,aAAa8C,QAAQ,eAAgB3C,KAAK4C,UAAUlB,EAASc,OAXjE,kDAaIb,QAAQG,MAAR,MAbJ,2DAboB,sBA+BpB,OACE,6BACE,0BAAMC,SAjCU,6CAmCd,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,wBAAf,iBACA,2BACEC,KAAK,QACLpB,KAAK,QACLkB,UAAU,eACVG,GAAG,uBACHC,mBAAiB,YACjBC,SAAUnB,EACVI,MAAON,EAAMH,QAEf,2BAAOsB,GAAG,YAAYH,UAAU,wBAAhC,mDAKF,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,2BAAf,YACA,2BACEC,KAAK,WACLpB,KAAK,WACLkB,UAAU,eACVG,GAAG,0BACHE,SAAUnB,EACVI,MAAON,EAAMD,YAIjB,4BAAQmB,KAAK,SAASF,UAAU,mBAAhC,UAGA,kBAAC,IAAD,CAAMa,GAAG,YAAT,oBCjCOC,MAlCf,SAAiBP,GAgBf,OAdAQ,qBAAU,WAAM,4CACd,4BAAAxB,EAAA,+EAE2BhC,EAAIyD,IAAI,YAFnC,OAEUtB,EAFV,OAIIC,QAAQC,IAAIF,GACZa,EAAMtB,SAAN,eAAoBS,EAASc,KAAKC,OALtC,gDAOId,QAAQG,MAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdmB,KACC,IAGD,6BACE,2BACE,wCACCV,EAAMvB,MAAMkC,KAEf,2BACE,0CACCX,EAAMvB,MAAMF,MAEf,2BACE,2CACCyB,EAAMvB,MAAMH,S,QCZNsC,MAhBf,YAAgE,IAA7BC,EAA4B,EAAvCC,UAAsBZ,EAAiB,EAAjBA,KAASa,EAAQ,oCAC7D,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAChB,GAEP,OADAZ,QAAQC,IAAIa,GACRA,EAAKS,IACA,kBAACE,EAAD,iBAAeb,EAAWe,EAA1B,CAAgCvD,aAAc0C,KAE9C,kBAAC,IAAD,CAAUI,GAAG,gBCGfW,MAbf,WACE,OACE,4BAAQxB,UAAU,kBAAkBE,KAAK,SAASuB,UAAQ,GACxD,0BACEzB,UAAU,mCACV0B,KAAK,SACLC,cAAY,SAEd,0BAAM3B,UAAU,QAAhB,gBCAS4B,MARf,SAAoBrB,GAClB,OACE,yBAAKP,UAAU,qBAAqB0B,KAAK,SACtCnB,EAAMT,QC6CE+B,MA1Cf,SAAqBtB,GAAQ,IACnBuB,EAAsCvB,EAAtCuB,aAAc5C,EAAwBqB,EAAxBrB,aAAcF,EAAUuB,EAAVvB,MAEpC,OACE,0BAAMe,SAAU+B,GACd,yBAAK9B,UAAU,cACb,2BAAOC,QAAQ,qBAAf,SACA,2BACEC,KAAK,OACLF,UAAU,eACVG,GAAG,oBACHrB,KAAK,QAELuB,SAAUnB,EACVI,MAAON,EAAM+C,SAGjB,yBAAK/B,UAAU,cACb,2BAAOC,QAAQ,2BAAf,eACA,8BACED,UAAU,eACVG,GAAG,0BACHrB,KAAK,cAELuB,SAAUnB,EACVI,MAAON,EAAMgD,eAIhBhD,EAAMiD,QACL,kBAAC,EAAD,MAEA,4BAAQ/B,KAAK,SAASF,UAAU,mBAAhC,UAKDhB,EAAMc,MAAQ,kBAAC,EAAD,CAAYA,MAAOd,EAAMc,QAAY,OCiB3CoC,MAvDf,WAEE,IAAMxD,EAAUC,cAFO,EAKGC,mBAAS,CACjCmD,MAAO,GACPC,YAAa,GACbC,SAAS,EACTnC,MAAO,KATc,mBAKhBd,EALgB,KAKTC,EALS,KAqBjB6C,EAAY,uCAAG,WAAO3C,GAAP,eAAAI,EAAA,6DACnBN,EAAS,2BAAKD,GAAN,IAAaiD,SAAS,KADX,SAKjB9C,EAAMK,iBALW,SAQMjC,EAAIkC,KAAK,WAAYT,GAR3B,OAQXU,EARW,OASjBC,QAAQC,IAAIF,GAGZT,EAAS,2BAAKD,GAAN,IAAaiD,SAAS,KAG9BvD,EAAQmB,KAAK,gBAfI,kDAiBjBF,QAAQG,MAAR,MACAb,EAAS,2BAAKD,GAAN,IAAaiD,SAAS,EAAOnC,MAAO,KAAIqC,WAlB/B,0DAAH,sDAsBlB,OACE,6BACE,2CACA,kBAAC,EAAD,CACEnD,MAAOA,EACPE,aAnCe,SAACC,GACpBF,EAAS,2BACJD,GADG,kBAELG,EAAME,cAAcP,KAAOK,EAAME,cAAcC,UAiC9CwC,aAAcA,M,QC9CPM,MARf,WACE,OACE,yBAAKpC,UAAU,iBAAiB0B,KAAK,UACnC,0BAAM1B,UAAU,WAAhB,gBC8ESqC,MA1Ef,WAAuB,MAEKzD,mBAAS,CACjC0D,SAAU,GACVL,SAAS,EACTnC,MAAO,KALY,mBAEdd,EAFc,KAEPC,EAFO,KA0BrB,OAjBA8B,qBAAU,WACR9B,EAAS,2BAAKD,GAAN,IAAaiD,SAAS,KAG9B,sBAAC,4BAAA1C,EAAA,+EAE0BhC,EAAIyD,IAAI,YAFlC,OAEStB,EAFT,OAGGC,QAAQC,IAAIF,GAEZT,EAAS,2BAAKD,GAAN,IAAaiD,SAAS,EAAOK,SAAS,YAAK5C,EAASc,SAL/D,gDAOGb,QAAQG,MAAR,MACAb,EAAS,2BAAKD,GAAN,IAAaiD,SAAS,EAAOnC,MAAO,KAAIqC,WARnD,wDAAD,KAWC,IAGD,6BACGnD,EAAMiD,QACL,kBAAC,EAAD,MAEA,2BAAOjC,UAAU,qBACf,2BAAOA,UAAU,cACf,4BACE,wBAAIuC,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,aAGJ,+BACGvD,EAAMsD,SAASE,KAAI,SAACC,GACnB,OACE,wBAAIC,IAAKD,EAAQvB,KACf,4BACE,kBAAC,IAAD,CAAML,GAAE,mBAAc4B,EAAQvB,MAAQuB,EAAQvB,MAEhD,4BACE,kBAAC,IAAD,CAAML,GAAE,mBAAc4B,EAAQvB,MAAQuB,EAAQV,QAEhD,4BACE,kBAAC,IAAD,CACE/B,UAAU,uBACVa,GAAE,wBAAmB4B,EAAQvB,MAF/B,QAMA,kBAAC,IAAD,CACElB,UAAU,iBACVa,GAAE,0BAAqB4B,EAAQvB,MAFjC,iBAablC,EAAMc,MAAQ,kBAAC,EAAD,CAAYA,MAAOd,EAAMc,QAAY,OCtB3C6C,MApDf,WAA0B,IAChBxC,EAAOyC,cAAPzC,GADe,EAIGvB,mBAAS,CACjCsC,IAAK,GACLa,MAAO,GACPC,YAAa,GACba,UAAW,GACXC,UAAW,KATU,mBAIhB9D,EAJgB,KAITC,EAJS,KAyBvB,OAZA8B,qBAAU,WAAM,4CACd,4BAAAxB,EAAA,sEACyBhC,EAAIyD,IAAJ,mBAAoBb,IAD7C,OACQT,EADR,OAGEC,QAAQC,IAAIF,GACZT,EAAS,eAAKS,EAASc,OAJzB,4CADc,uBAAC,WAAD,wBAOdS,KACC,CAACd,IAKF,yBAAKH,UAAU,sBACb,+CACA,8BACE,wCACChB,EAAMkC,KAET,8BACE,2CACClC,EAAM+C,OAET,8BACE,iDACC/C,EAAMgD,aAET,8BACE,mDACC,IAAIe,KAAK/D,EAAM6D,WAAWG,sBAE7B,8BACE,qDACC,IAAID,KAAK/D,EAAM8D,WAAWE,wBC2CpBC,MArFf,SAAqB1C,GAEnB,IAAM7B,EAAUC,cAERwB,EAAOI,EAAM2C,MAAMC,OAAnBhD,GAJkB,EAMAvB,mBAAS,CACjCmD,MAAO,GACPC,YAAa,GACblC,MAAO,GACPsD,MAAO,IAViB,mBAMnBpE,EANmB,KAMZC,EANY,OAYkBL,oBAAS,GAZ3B,mBAYnByE,EAZmB,KAYHC,EAZG,OAagB1E,oBAAS,GAbzB,mBAanB2E,EAbmB,KAaJC,EAbI,KAgB1BzC,qBAAU,WACRuC,GAAkB,GAClB,sBAAC,4BAAA/D,EAAA,+EAE0BhC,EAAIyD,IAAJ,mBAAoBb,IAF9C,OAEST,EAFT,OAIGC,QAAQC,IAAIF,GACZ4D,GAAkB,GAClBrE,EAAS,eAAKS,EAASc,OAN1B,gDAQGb,QAAQG,MAAR,MACAwD,GAAkB,GAClBrE,EAAS,2BAAKD,GAAN,IAAac,MAAO,KAAIqC,WAVnC,wDAAD,KAaC,CAAChC,IAGJ,IAQM2B,EAAY,uCAAG,WAAO3C,GAAP,eAAAI,EAAA,6DACnBiE,GAAiB,GADE,SAKjBrE,EAAMK,iBALW,SAQMjC,EAAIkG,MAAJ,mBAAsBtD,GAAMnB,GARlC,OAQXU,EARW,OASjBC,QAAQC,IAAIF,GAGZ8D,GAAiB,GAGjB9E,EAAQmB,KAAK,gBAfI,kDAiBjBF,QAAQG,MAAR,MACA0D,GAAiB,GACjBvE,EAAS,2BAAKD,GAAN,IAAac,MAAO,KAAIqC,WAnBf,0DAAH,sDA2BlB,OACE,6BACE,4CACCkB,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACErE,MAAK,2BAAOA,GAAP,IAAciD,QAASsB,IAC5BrE,aA3Ca,SAACC,GACpBF,EAAS,2BACJD,GADG,kBAELG,EAAME,cAAcP,KAAOK,EAAME,cAAcC,UAyC5CwC,aAAcA,MCvBT4B,EA5DA,SAACnD,GACd,OACE,yBAAKP,UAAU,kDACb,kBAAC,IAAD,CAAMA,UAAU,eAAea,GAAG,KAAlC,sBAGA,4BACEb,UAAU,iBACVE,KAAK,SACLyD,cAAY,WACZC,cAAY,qBACZC,gBAAc,oBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM/D,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BG,GAAG,qBAC1CI,EAAME,KAAKS,IACV,yBAAKlB,UAAU,2DACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWa,GAAG,gBAA9B,aAIF,wBAAIb,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWa,GAAG,gBAA9B,iBAKJ,0BAAMb,UAAU,cACbO,EAAME,KAAN,mBAAyBF,EAAME,KAAK3B,KAApC,OAAgD,IAEnD,0BAAMkB,UAAU,oBAAhB,KACA,kBAAC,IAAD,CAAMA,UAAU,aAAaa,GAAG,WAAhC,WAKF,yBAAKb,UAAU,uDACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWa,GAAG,WAA9B,WAIF,wBAAIb,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWa,GAAG,UAA9B,eCjCDmD,EAhBA,SAACzD,GACd,IAAM7B,EAAUC,cAQhB,OAPAoC,qBAAU,WACRlD,aAAaoG,WAAW,gBACxBtE,QAAQC,IAAIW,GACZA,EAAM2D,QAAQ,IACdxF,EAAQmB,KAAK,YACZ,IAGD,gDCwDWsE,MArDf,WAAgB,IAAD,EAC2BvF,mBAAS,IADpC,mBACNb,EADM,KACQ2C,EADR,OAEmB9B,mBAAS,IAF5B,mBAENwF,EAFM,KAEIC,EAFJ,KAYb,OARAtD,qBAAU,WACR,IAAMnD,EAAaC,aAAaC,QAAQ,gBAElCwG,EAAatG,KAAKC,MAAML,GAAc,MAE5C8C,EAAgB,eAAK4D,EAAW7D,SAC/B,IAGD,yBAAKT,UAAU,kBACb,kBAAC,IAAD,KACA,kBAAC,EAAD,CAAQS,KAAM1C,IACXA,EAAamD,IACZ,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEqD,KAAK,WACLlD,UAAWP,EACXL,KAAM1C,EACNkB,SAAUoF,EACVrF,MAAOoF,IAET,kBAAC,IAAD,CAAOI,OAAK,EAACD,KAAK,eAAelD,UAAWgB,EAAa5B,KAAM1C,IAC/D,kBAAC,IAAD,CAAOyG,OAAK,EAACD,KAAK,eAAelD,UAAWa,EAAezB,KAAM1C,IACjE,kBAAC,IAAD,CAAOwG,KAAK,oBAAoBlD,UAAW4B,EAAaxC,KAAM1C,IAC9D,kBAAC,IAAD,CAAOwG,KAAK,eAAelD,UAAWsB,EAAelC,KAAM1C,IAC3D,kBAAC,IAAD,CAAOwG,KAAK,UAAUhD,OAAQ,SAAChB,GAAD,OAAW,kBAAC,EAAD,CAAQE,KAAM1C,EAAcmG,QAASxD,OAC9E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUG,GAAG,eAIjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0D,KAAK,UAAUlD,UAAW5C,IACjC,kBAAC,IAAD,CACE8F,KAAK,SACLhD,OAAQ,SAAChB,GACP,OAAO,kBAAC,EAAD,eAAOG,gBAAiBA,GAAqBH,OAGxD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUM,GAAG,gBCxD3B4D,IAASlD,OACP,kBAAC,IAAMmD,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.767b5d1d.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Criando uma instancia \"pré-configurada\" do Axios, com a raiz do endereço do nosso servidor\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API,\n});\n\nconst storedUser = localStorage.getItem(\"loggedInUser\");\n\nconst loggedInUser = JSON.parse(storedUser || '\"\"');\n\napi.interceptors.request.use((config) => {\n  config.headers = {\n    Authorization: `Bearer ${loggedInUser.token}`,\n  };\n\n  return config;\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// Instância do Axios\nimport api from \"../../apis/index\";\n\nfunction SignupForm() {\n  const history = useHistory()\n  // 1. Onde vamos guardar as informações do form\n  const [state, setState] = useState({ email: \"\", name: \"\", password: \"\" });\n\n  // 3. Tornar o formulario controlado (handleChange)\n  function handleChange(event) {\n    const temp = { ...state };\n    temp[event.currentTarget.name] = event.currentTarget.value;\n    setState(temp);\n  }\n\n  // 4. Disparar as informações do formulario para o backend\n  async function handleSubmit(event) {\n    // Impede o funcionamento padrāo do formulario\n    event.preventDefault();\n\n    try {\n      const response = await api.post(\"/signup\", state);\n\n      console.log(response);\n      history.push('/login')\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // 2. Construir o JSX\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* Name form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormNameInput\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"name\"\n            id=\"signupFormNameInput\"\n            aria-describedby=\"emailHelp\"\n            onChange={handleChange}\n            value={state.name}\n          />\n        </div>\n\n        {/* Email form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormEmailInput\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            id=\"signupFormEmailInput\"\n            aria-describedby=\"emailHelp\"\n            onChange={handleChange}\n            value={state.email}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        {/* Password form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormPasswordInput\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            id=\"signupFormPasswordInput\"\n            onChange={handleChange}\n            value={state.password}\n          />\n        </div>\n        {/* Submit button  */}\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignupForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../apis\";\n\nfunction Login(props) {\n  // 1. Onde vamos guardar os dados do form (state)\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  // 2. Atualizar o state com os dados do form\n  function handleChange(event) {\n    setState({\n      ...state,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  }\n\n  // 4. Enviar a requisicāo POST para o backend\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n\n      const response = await api.post(\"/login\", state);\n\n      console.log(response);\n      setState({...response.data.user})\n      props.setLoggedInUser({ ...response.data.user });\n\n      // 5. Persistir as informações do usuário no localStorage\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(response.data));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // 3. Construir o JSX\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* Email form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormEmailInput\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            id=\"signupFormEmailInput\"\n            aria-describedby=\"emailHelp\"\n            onChange={handleChange}\n            value={state.email}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        {/* Password form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormPasswordInput\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            id=\"signupFormPasswordInput\"\n            onChange={handleChange}\n            value={state.password}\n          />\n        </div>\n        {/* Submit button  */}\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n        <Link to=\"/profile\">Go to Profile</Link>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../apis\";\n\nfunction Profile(props) {\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await api.get(\"/profile\");\n\n        console.log(response);\n        props.setState({ ...response.data.user })\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <p>\n        <strong>ID: </strong>\n        {props.state._id}\n      </p>\n      <p>\n        <strong>Name: </strong>\n        {props.state.name}\n      </p>\n      <p>\n        <strong>Email: </strong>\n        {props.state.email}\n      </p>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, user, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        console.log(user);\n        if (user._id) {\n          return <Component {...props} {...rest} loggedInUser={user} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nfunction LoadingButton() {\n  return (\n    <button className=\"btn btn-primary\" type=\"button\" disabled>\n      <span\n        className=\"spinner-border spinner-border-sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      ></span>\n      <span className=\"pl-2\">Loading...</span>\n    </button>\n  );\n}\n\nexport default LoadingButton;\n","import React from \"react\";\n\nfunction ErrorAlert(props) {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      {props.error}\n    </div>\n  );\n}\n\nexport default ErrorAlert;\n","import React from \"react\";\n\n// Importando botāo de loading\nimport LoadingButton from \"../../components/LoadingButton\";\n\n// Importando mensagem de erro\nimport ErrorAlert from \"../../components/ErrorAlert\";\n\nfunction ProjectForm(props) {\n  const { handleSubmit, handleChange, state } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"titleProjectInput\">Title</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"titleProjectInput\"\n          name=\"title\"\n          // Tornando input controlado\n          onChange={handleChange}\n          value={state.title}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"descriptionProjectInput\">Description</label>\n        <textarea\n          className=\"form-control\"\n          id=\"descriptionProjectInput\"\n          name=\"description\"\n          // Tornando input controlado\n          onChange={handleChange}\n          value={state.description}\n        ></textarea>\n      </div>\n      {/* Renderizaçāo condicional do botāo de loading */}\n      {state.loading ? (\n        <LoadingButton />\n      ) : (\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      )}\n      {/* Renderizaçāo condicional do alerta de erro */}\n      {state.error ? <ErrorAlert error={state.error} /> : null}\n    </form>\n  );\n}\n\nexport default ProjectForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../apis/index\";\n\n// Importar componente de formulario\nimport ProjectForm from \"./ProjectForm\";\n\nfunction ProjectCreate() {\n  // Instancia do History que nos permite navegar programaticamente\n  const history = useHistory();\n\n  // Configurando o state inicial\n  const [state, setState] = useState({\n    title: \"\",\n    description: \"\",\n    loading: false,\n    error: \"\",\n  });\n\n  // Atualiza o state toda vez que o usuario digitar ou apagar algo dentro dos campos do form\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  // Dispara a requisiçāo HTTP para o backend com os dados do formulário\n  const handleSubmit = async (event) => {\n    setState({ ...state, loading: true });\n\n    try {\n      // Impedir comportamento padrāo do formulário\n      event.preventDefault();\n\n      // Disparar a requisiçāo manualmente através do React\n      const response = await api.post(\"/project\", state);\n      console.log(response);\n\n      // Cancela o estado de loading\n      setState({ ...state, loading: false });\n\n      // Navega programaticamente para a lista de projetos\n      history.push(\"/project/all\");\n    } catch (err) {\n      console.error(err);\n      setState({ ...state, loading: false, error: err.message });\n    }\n  };\n\n  return (\n    <div>\n      <h1>New Project</h1>\n      <ProjectForm\n        state={state}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  );\n}\n\nexport default ProjectCreate;\n","import React from \"react\";\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"spinner-border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../apis/\";\n\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\n// Importando mensagem de erro\nimport ErrorAlert from \"../../components/ErrorAlert\";\n\nfunction ProjectList() {\n  // Nosso state inicial é 1 array vazia, pois vamos ter uma lista (array) de projetos\n  const [state, setState] = useState({\n    projects: [],\n    loading: false,\n    error: \"\",\n  });\n\n  // Disparar a requisiçāo HTTP para buscar os dados no servidor assim que o componente for renderizado\n  useEffect(function () {\n    setState({ ...state, loading: true });\n    // Expressoes de funcao imediatamente invocadas\n    // Immediately Invoked function expression\n    (async function () {\n      try {\n        const response = await api.get(\"/project\");\n        console.log(response);\n\n        setState({ ...state, loading: false, projects: [...response.data] });\n      } catch (err) {\n        console.error(err);\n        setState({ ...state, loading: false, error: err.message });\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      {state.loading ? (\n        <LoadingSpinner />\n      ) : (\n        <table className=\"table table-hover\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.projects.map((project) => {\n              return (\n                <tr key={project._id}>\n                  <td>\n                    <Link to={`/project/${project._id}`}>{project._id}</Link>\n                  </td>\n                  <td>\n                    <Link to={`/project/${project._id}`}>{project.title}</Link>\n                  </td>\n                  <td>\n                    <Link\n                      className=\"btn btn-primary mr-1\"\n                      to={`/project/edit/${project._id}`}\n                    >\n                      Edit\n                    </Link>\n                    <Link\n                      className=\"btn btn-danger\"\n                      to={`/project/delete/${project._id}`}\n                    >\n                      Delete\n                    </Link>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {state.error ? <ErrorAlert error={state.error} /> : null}\n    </div>\n  );\n}\n\nexport default ProjectList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../apis/\";\n\nfunction ProjectDetail() {\n  const { id } = useParams();\n\n  // 1. Onde guardar as informações\n  const [state, setState] = useState({\n    _id: \"\",\n    title: \"\",\n    description: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n  });\n\n  // 2. Obter as informações\n  useEffect(() => {\n    async function fetchData() {\n      const response = await api.get(`/project/${id}`);\n\n      console.log(response);\n      setState({ ...response.data });\n    }\n    fetchData();\n  }, [id]);\n\n  // 3. Apresentar as informações\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <h1>Project Details</h1>\n      <span>\n        <strong>ID: </strong>\n        {state._id}\n      </span>\n      <span>\n        <strong>Title: </strong>\n        {state.title}\n      </span>\n      <span>\n        <strong>Description: </strong>\n        {state.description}\n      </span>\n      <span>\n        <strong>Creation Date: </strong>\n        {new Date(state.createdAt).toLocaleDateString()}\n      </span>\n      <span>\n        <strong>Last Updated At: </strong>\n        {new Date(state.updatedAt).toLocaleDateString()}\n      </span>\n    </div>\n  );\n}\n\nexport default ProjectDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../apis/\";\n\nimport ProjectForm from \"./ProjectForm\";\n\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\nfunction ProjectEdit(props) {\n  // Instancia do History que nos permite navegar programaticamente\n  const history = useHistory();\n\n  const { id } = props.match.params;\n\n  const [state, setState] = useState({\n    title: \"\",\n    description: \"\",\n    error: \"\",\n    count: 0,\n  });\n  const [isLoadingFetch, setIsLoadingFetch] = useState(false);\n  const [isLoadingSend, setIsLoadingSend] = useState(false);\n\n  // 0. Buscar os dados existentes deste projeto\n  useEffect(() => {\n    setIsLoadingFetch(true);\n    (async function () {\n      try {\n        const response = await api.get(`/project/${id}`);\n\n        console.log(response);\n        setIsLoadingFetch(false);\n        setState({ ...response.data });\n      } catch (err) {\n        console.error(err);\n        setIsLoadingFetch(false);\n        setState({ ...state, error: err.message });\n      }\n    })();\n  }, [id]);\n\n  // Atualiza o state toda vez que o usuario digitar ou apagar algo dentro dos campos do form\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  // Dispara a requisiçāo HTTP para o backend com os dados do formulário\n  const handleSubmit = async (event) => {\n    setIsLoadingSend(true);\n\n    try {\n      // Impedir comportamento padrāo do formulário\n      event.preventDefault();\n\n      // Disparar a requisiçāo manualmente através do React\n      const response = await api.patch(`/project/${id}`, state);\n      console.log(response);\n\n      // Cancela o estado de loading\n      setIsLoadingSend(false);\n\n      // Navega programaticamente para a lista de projetos\n      history.push(\"/project/all\");\n    } catch (err) {\n      console.error(err);\n      setIsLoadingSend(false);\n      setState({ ...state, error: err.message });\n    }\n  };\n\n  // 1. Popular o formulario com os dados existentes\n\n  // 2. Enviar os dados atualizados para o servidor\n\n  return (\n    <div>\n      <h1>Edit Project</h1>\n      {isLoadingFetch ? (\n        <LoadingSpinner />\n      ) : (\n        <ProjectForm\n          state={{ ...state, loading: isLoadingSend }}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProjectEdit;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Project Management\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        {props.user._id ? (\n          <div className=\"d-flex align-items-center justify-content-between w-100\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/project/all\">\n                  Projects\n                </Link>\n              </li>\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/project/new\">\n                  New Project\n                </Link>\n              </li>\n            </ul>\n            <span className=\"text-light\">\n              {props.user ? `Welcome, ${props.user.name} :)` : \"\"}\n            </span>\n            <span className=\"mx-2 navbar-text\">|</span>\n            <Link className=\"text-light\" to=\"/logout\">\n              Logout\n            </Link>\n          </div>\n        ) : (\n          <div className=\"d-flex align-items-center justify-content-end w-100\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/signup\">\n                  Signup\n                </Link>\n              </li>\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/login\">\n                  Login\n                </Link>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\nexport default Navbar;\n","import React, { useEffect }  from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Logout = (props) => {\n  const history = useHistory()\n  useEffect(() => {\n    localStorage.removeItem('loggedInUser');\n    console.log(props)\n    props.setUser({})\n    history.push('/login')\n  }, []);\n\n  return (  \n    <div>\n      Logging out...\n    </div>\n  );\n}\n \nexport default Logout;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport SignupForm from \"../routeComponents/auth/SignupForm\";\nimport Login from \"../routeComponents/auth/Login\";\nimport Profile from \"../routeComponents/auth/Profile\";\nimport PrivateRoute from \"../routeComponents/auth/PrivateRoute\";\n\nimport ProjectCreate from \"../routeComponents/projects/ProjectCreate\";\nimport ProjectList from \"../routeComponents/projects/ProjectList\";\nimport ProjectDetail from \"../routeComponents/projects/ProjectDetail\";\nimport ProjectEdit from \"../routeComponents/projects/ProjectEdit\";\nimport Navbar from \"./Navbar\";\nimport Logout from \"../routeComponents/auth/Logout\";\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"loggedInUser\");\n\n    const parsedUser = JSON.parse(storedUser || '\"\"');\n\n    setLoggedInUser({ ...parsedUser.user });\n  }, []);\n\n  return (\n    <div className=\"container mt-5\">\n      <BrowserRouter >\n      <Navbar user={loggedInUser}/>\n        {loggedInUser._id ? (\n          <Switch>\n            <PrivateRoute\n              path=\"/profile\"\n              component={Profile}\n              user={loggedInUser}\n              setState={setUserInfo}\n              state={userInfo}\n            />\n            <Route exact path=\"/project/all\" component={ProjectList} user={loggedInUser} />\n            <Route exact path=\"/project/new\" component={ProjectCreate} user={loggedInUser} />\n            <Route path=\"/project/edit/:id\" component={ProjectEdit} user={loggedInUser} />\n            <Route path=\"/project/:id\" component={ProjectDetail} user={loggedInUser} />\n            <Route path='/logout' render={(props) => <Logout user={loggedInUser} setUser={setLoggedInUser} />}  />\n            <Route>\n              <Redirect to=\"/profile\" />\n            </Route>\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/signup\" component={SignupForm} />\n            <Route\n              path=\"/login\"\n              render={(props) => {\n                return <Login setLoggedInUser={setLoggedInUser} {...props} />;\n              }}\n            />\n            <Route>\n              <Redirect to=\"/login\" />\n            </Route>\n          </Switch>\n        )}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}